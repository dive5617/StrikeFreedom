<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:pTop" >

    <LinearGradientBrush x:Key="ListViewSelectedBrush" EndPoint="0,1" StartPoint="0,0">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#ff75aac7" Offset="0"/>
                <GradientStop Color="#aa3399ff" Offset="1"/>
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    
    <Style x:Key="ListViewItemContainerStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="#ffffffff" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" BorderThickness="0,0,0,1" BorderBrush="#6FBDE8">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="#993399ff" />
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListViewSelectedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#e0eff8" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListViewSelectedBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="#FF143c65"/>
                            <Setter Property="Foreground" Value="White"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContextMenu" Value="{DynamicResource open_folder_cm}"></Setter>
    </Style>

    <Style x:Key="LabelStyle" TargetType="Label">
        <!--<Setter Property="FontFamily" Value="Times New Roman" />-->
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Foreground" Value="#ee100000"/>
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="DFVisibility" TargetType="StackPanel">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=fileList,Path=Items.Count}" Value="0">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DBtipStyle" TargetType="TextBlock">
        <Setter Property="Visibility" Value="Collapsed" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=Database,Path=SelectedIndex}" Value="-1">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!--x:Key="SimpleTip"-->
    <Style TargetType="{x:Type ToolTip}">
        <Setter Property = "HorizontalOffset" Value="0"/>
        <Setter Property = "VerticalOffset" Value="0"/>
        <Setter Property = "Background" Value="#ffE9ECEF"/>
        <Setter Property = "Foreground" Value="Black"/>
        <Setter Property = "FontSize" Value="12"/>
    </Style>

    <!--Button样式-->
    <Style x:Key="ButtonStyle1" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">

                    <Grid SnapsToDevicePixels="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation 
                                                Storyboard.TargetName="buttonShape"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1"
                                                Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation 
                                                  Storyboard.TargetName="buttonShape"
                                                  Storyboard.TargetProperty="Opacity"
                                                  To="1"
                                                  Duration="0:0:0.1" />
                                        <DoubleAnimation 
                                                  Storyboard.TargetName="buttonShape"
                                                  Storyboard.TargetProperty="Opacity"
                                                  To="0"
                                                  Duration="0" />
                                        <ColorAnimation 
                                                    Storyboard.TargetName="buttonText"
                                                    Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
                                                    To="Black" Duration="0:0:0.1"/>
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation 
                                                Storyboard.TargetName="buttonShape"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1"
                                                Duration="0:0:0.1" />
                                        <DoubleAnimation 
                                                  Storyboard.TargetName="buttonShape"
                                                  Storyboard.TargetProperty="Opacity"
                                                  To="1"
                                                  Duration="0:0:0.1" />

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation 
                                                Storyboard.TargetName="buttonShape"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0.5"
                                                Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="FocusStates">
                                <VisualState Name="Focused">
                                    <Storyboard>
                                        <!--<DoubleAnimation 
                                                    Storyboard.TargetName="buttonShape"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="1" Duration="0:0:0.3"/>
                                                <DoubleAnimation 
                                                    Storyboard.TargetName="buttonShape"
                                                    Storyboard.TargetProperty="Opacity"
                                                    To="0" Duration="0:0:0.1"/>-->

                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Unfocused">
                                    <Storyboard>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Name="hoverShape" Height="30" Margin="0,0,1,0"
                                        SnapsToDevicePixels="True" BorderThickness="0,0,1,0">
                            <Border BorderBrush="#ffa1b7ea" BorderThickness="0,1"
                                            Background="#ffe5eef9" Height="40"
                                            SnapsToDevicePixels="True" />
                        </Border>
                        <Border Name="buttonShape" Opacity="0" BorderBrush="#ffe9ecef"
                                        BorderThickness="0" Height="30" SnapsToDevicePixels="True">
                            <Rectangle  Stretch="Fill" Height="30">
                                <Rectangle.Fill>
                                    <RadialGradientBrush GradientOrigin="0.2,0.5" RadiusX="0.8" RadiusY="0.8">
                                        <GradientStop Color="#ff5fa3f6" Offset="0" />
                                        <GradientStop Color="#ff0c55b9" Offset="1" />
                                    </RadialGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <Border Name="NormalShape" Opacity="0" BorderBrush="#ffe9ecef"
                                        BorderThickness="0" Height="30" SnapsToDevicePixels="True">
                            <Rectangle  Stretch="Fill" Height="30">
                                <Rectangle.Fill>
                                    <RadialGradientBrush GradientOrigin="0.2,0.5" RadiusX="0.8" RadiusY="0.8">
                                        <GradientStop Color="#ff5fa3f6" Offset="0" />
                                        <GradientStop Color="#ff5DC5F9" Offset="1" />
                                    </RadialGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <ContentPresenter Name="buttonText"
                                                  TextBlock.FontSize="12pt"
                                                  TextBlock.Foreground="White"
                                                  Content="{TemplateBinding Content}"
                                                  TextBlock.TextAlignment="Justify"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonOpacity" TargetType="Button">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="true">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Summary面板-->
    <Style x:Key="SummaryListView" TargetType="{x:Type ListViewItem}">
        <Style.Resources>
            <LinearGradientBrush x:Key="ProfitBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0.1" Color="#AA00CC00" />
                <GradientStop Offset="0.8" Color="#66009900" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="LossBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0.1" Color="#AACd0000" />
                <GradientStop Offset="0.8" Color="#55890000" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="InvalidBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0.1" Color="#fff7b883" />
                <GradientStop Offset="0.8" Color="#55880000" />
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="PointlessBrush" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0.1" Color="#AA63d1ac" />
                <GradientStop Offset="0.8" Color="#55008800" />
            </LinearGradientBrush>
        </Style.Resources>

        <Setter Property="HorizontalContentAlignment" Value="Stretch" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=_value}" Value="null">
                <Setter Property="Background" Value="{StaticResource LossBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=_value}" Value="">
                <Setter Property="Background" Value="{StaticResource ProfitBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=_check}" Value="invalid">
                <Setter Property="Background" Value="{StaticResource InvalidBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=_check}" Value="pointless">
                <Setter Property="Background" Value="{StaticResource PointlessBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>